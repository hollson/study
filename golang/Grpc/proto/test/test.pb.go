// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test/test.proto

package test

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Status 枚举状态
type Test_Status int32

const (
	Test_OK   Test_Status = 0
	Test_FAIL Test_Status = 1
)

var Test_Status_name = map[int32]string{
	0: "OK",
	1: "FAIL",
}

var Test_Status_value = map[string]int32{
	"OK":   0,
	"FAIL": 1,
}

func (x Test_Status) String() string {
	return proto.EnumName(Test_Status_name, int32(x))
}

func (Test_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_84eb23d74a64bdab, []int{2, 0}
}

// Request 请求结构
type Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_84eb23d74a64bdab, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Response 响应结构
type Response struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_84eb23d74a64bdab, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Test 测试
type Test struct {
	Age                  int32             `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty"`
	Count                int64             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Money                float64           `protobuf:"fixed64,3,opt,name=money,proto3" json:"money,omitempty"`
	Score                float32           `protobuf:"fixed32,4,opt,name=score,proto3" json:"score,omitempty"`
	Name                 string            `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Fat                  bool              `protobuf:"varint,6,opt,name=fat,proto3" json:"fat,omitempty"`
	Char                 []byte            `protobuf:"bytes,7,opt,name=char,proto3" json:"char,omitempty"`
	Status               Test_Status       `protobuf:"varint,8,opt,name=status,proto3,enum=test.Test_Status" json:"status,omitempty"`
	Child                *Test_Child       `protobuf:"bytes,9,opt,name=child,proto3" json:"child,omitempty"`
	Dict                 map[string]string `protobuf:"bytes,10,rep,name=dict,proto3" json:"dict,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_84eb23d74a64bdab, []int{2}
}

func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (m *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(m, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

func (m *Test) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Test) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Test) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *Test) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Test) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Test) GetFat() bool {
	if m != nil {
		return m.Fat
	}
	return false
}

func (m *Test) GetChar() []byte {
	if m != nil {
		return m.Char
	}
	return nil
}

func (m *Test) GetStatus() Test_Status {
	if m != nil {
		return m.Status
	}
	return Test_OK
}

func (m *Test) GetChild() *Test_Child {
	if m != nil {
		return m.Child
	}
	return nil
}

func (m *Test) GetDict() map[string]string {
	if m != nil {
		return m.Dict
	}
	return nil
}

// Child 子结构
type Test_Child struct {
	Sex                  string   `protobuf:"bytes,1,opt,name=sex,proto3" json:"sex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test_Child) Reset()         { *m = Test_Child{} }
func (m *Test_Child) String() string { return proto.CompactTextString(m) }
func (*Test_Child) ProtoMessage()    {}
func (*Test_Child) Descriptor() ([]byte, []int) {
	return fileDescriptor_84eb23d74a64bdab, []int{2, 0}
}

func (m *Test_Child) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test_Child.Unmarshal(m, b)
}
func (m *Test_Child) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test_Child.Marshal(b, m, deterministic)
}
func (m *Test_Child) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test_Child.Merge(m, src)
}
func (m *Test_Child) XXX_Size() int {
	return xxx_messageInfo_Test_Child.Size(m)
}
func (m *Test_Child) XXX_DiscardUnknown() {
	xxx_messageInfo_Test_Child.DiscardUnknown(m)
}

var xxx_messageInfo_Test_Child proto.InternalMessageInfo

func (m *Test_Child) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func init() {
	proto.RegisterEnum("test.Test_Status", Test_Status_name, Test_Status_value)
	proto.RegisterType((*Request)(nil), "test.Request")
	proto.RegisterType((*Response)(nil), "test.Response")
	proto.RegisterType((*Test)(nil), "test.Test")
	proto.RegisterMapType((map[string]string)(nil), "test.Test.DictEntry")
	proto.RegisterType((*Test_Child)(nil), "test.Test.Child")
}

func init() { proto.RegisterFile("test/test.proto", fileDescriptor_84eb23d74a64bdab) }

var fileDescriptor_84eb23d74a64bdab = []byte{
	// 365 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x52, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0x8d, 0xfc, 0x15, 0xfb, 0x66, 0xcb, 0x3c, 0x91, 0x07, 0xcd, 0x30, 0x10, 0x66, 0x6c, 0xda,
	0x4b, 0x06, 0x1e, 0xb4, 0xa5, 0x6f, 0xfd, 0x84, 0xd2, 0x42, 0x41, 0xe9, 0x53, 0xdf, 0x5c, 0x47,
	0x6d, 0x4c, 0x12, 0x3b, 0xb5, 0xe4, 0xd0, 0x3c, 0xf6, 0x9f, 0x17, 0x49, 0x76, 0x9a, 0x17, 0x73,
	0xce, 0x3d, 0xc7, 0xd2, 0xd1, 0xbd, 0x17, 0xbe, 0x29, 0x21, 0xd5, 0x3f, 0xfd, 0x99, 0x6e, 0x9a,
	0x5a, 0xd5, 0xd8, 0xd3, 0x38, 0xfd, 0x09, 0x43, 0x2e, 0x5e, 0x5b, 0x21, 0x15, 0xc6, 0xe0, 0x55,
	0xf9, 0x5a, 0x10, 0x44, 0x11, 0x8b, 0xb8, 0xc1, 0xe9, 0x2f, 0x08, 0xb9, 0x90, 0x9b, 0xba, 0x92,
	0x02, 0x13, 0x18, 0xae, 0x85, 0x94, 0xf9, 0x4b, 0x6f, 0xe9, 0x69, 0xfa, 0xee, 0x82, 0xf7, 0xa0,
	0x8f, 0x88, 0xc1, 0xed, 0x65, 0x9f, 0x6b, 0x88, 0x27, 0xe0, 0x17, 0x75, 0x5b, 0x29, 0xe2, 0x50,
	0xc4, 0x5c, 0x6e, 0x89, 0xae, 0xae, 0xeb, 0x4a, 0xec, 0x88, 0x4b, 0x11, 0x43, 0xdc, 0x12, 0x5d,
	0x95, 0x45, 0xdd, 0x08, 0xe2, 0x51, 0xc4, 0x1c, 0x6e, 0xc9, 0x3e, 0x96, 0xff, 0x19, 0x4b, 0xdf,
	0xf3, 0x9c, 0x2b, 0x12, 0x50, 0xc4, 0x42, 0xae, 0xa1, 0x76, 0x15, 0x8b, 0xbc, 0x21, 0x43, 0x8a,
	0xd8, 0x17, 0x6e, 0x30, 0xfe, 0x0b, 0x81, 0x54, 0xb9, 0x6a, 0x25, 0x09, 0x29, 0x62, 0xe3, 0xec,
	0xfb, 0xd4, 0x3c, 0x5f, 0x27, 0x9d, 0xce, 0x8c, 0xc0, 0x3b, 0x03, 0xfe, 0x0d, 0x7e, 0xb1, 0x28,
	0x57, 0x73, 0x12, 0x51, 0xc4, 0x46, 0x59, 0x7c, 0xe0, 0xbc, 0xd0, 0x75, 0x6e, 0x65, 0xcc, 0xc0,
	0x9b, 0x97, 0x85, 0x22, 0x40, 0x5d, 0x36, 0xca, 0x26, 0x07, 0xb6, 0xcb, 0xb2, 0x50, 0x57, 0x95,
	0x6a, 0x76, 0xdc, 0x38, 0x92, 0x1f, 0xe0, 0x9b, 0x3f, 0x75, 0x56, 0x29, 0xde, 0xba, 0x96, 0x69,
	0x98, 0x1c, 0x43, 0xb4, 0x77, 0x6b, 0x79, 0x29, 0x76, 0xbd, 0xbc, 0xb4, 0x6d, 0xd8, 0xe6, 0xab,
	0x56, 0x98, 0x96, 0x45, 0xdc, 0x92, 0x53, 0xe7, 0x04, 0xa5, 0x09, 0x04, 0x36, 0x37, 0x0e, 0xc0,
	0xb9, 0xbf, 0x8d, 0x07, 0x38, 0x04, 0xef, 0xfa, 0xec, 0xe6, 0x2e, 0x46, 0xd9, 0x11, 0x8c, 0x74,
	0x8e, 0x99, 0x68, 0xb6, 0x65, 0x21, 0xf0, 0x9f, 0x6e, 0x22, 0x5f, 0x6d, 0xc4, 0x6e, 0xc6, 0xc9,
	0xb8, 0xa7, 0x76, 0xa6, 0xe9, 0xe0, 0x3c, 0x78, 0x34, 0x8b, 0xf0, 0x14, 0x98, 0xad, 0xf8, 0xff,
	0x11, 0x00, 0x00, 0xff, 0xff, 0x51, 0x58, 0xe9, 0x6d, 0x28, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestServiceClient is the client API for TestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestServiceClient interface {
	// Test 测试方法
	Test(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type testServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestServiceClient(cc *grpc.ClientConn) TestServiceClient {
	return &testServiceClient{cc}
}

func (c *testServiceClient) Test(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/test.TestService/Test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestServiceServer is the server API for TestService service.
type TestServiceServer interface {
	// Test 测试方法
	Test(context.Context, *Request) (*Response, error)
}

// UnimplementedTestServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestServiceServer struct {
}

func (*UnimplementedTestServiceServer) Test(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test not implemented")
}

func RegisterTestServiceServer(s *grpc.Server, srv TestServiceServer) {
	s.RegisterService(&_TestService_serviceDesc, srv)
}

func _TestService_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.TestService/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).Test(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.TestService",
	HandlerType: (*TestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Test",
			Handler:    _TestService_Test_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test/test.proto",
}
